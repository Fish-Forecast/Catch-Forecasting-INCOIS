library(urca)
require(urca)
ur.df(anchovy, type="none", lags=0)
require(urca)
test = ur.df(anchovy, type="none", lags=0)
test
summary(test)
names(summary(test))
attr(summary(test))
names(test)
test
class(test)
attr(test,"package")
attr(test)
attributes(test)
test$cval
attr(test,"cval")
summary(test)
attributes(test)
attr(test,"cval")
attr(test,"cval")[2\
attr(test,"cval")[2]
require(tseries)
adf.test(anchovy)
adf.test(sardine)
require(urca)
test = ur.df(anchovy, type="none", lags=0)
test
test = ur.df(anchovy, type="trend", lags=0)
test
attr(test,"cval")[2]
attr(test,"cval")
test = ur.df(anchovy, type="drift", lags=0)
test
attr(test,"cval")
adf.test(anchovy)
adf.test(sardine)
plot(sardine)
plot(anchovy)
adf.test((1:24)+rnorm(24)
)
adf.test((1:24)+rnorm(24))
adf.test((1:24)+rnorm(24))
adf.test((1:24)+rnorm(24))
adf.test((1:100)+rnorm(100))
adf.test((1:100)+rnorm(100))
adf.test((1:30)+rnorm(30))
adf.test((1:30)+rnorm(30))
adf.test((1:30)+rnorm(30))
adf.test((1:30)+rnorm(30),k=0)
test=adf.test((1:30)+rnorm(30),k=0)
summary(test)
coef(test)
test
class(test)
attributes(test)
test$parameter
test$method
test=ur.df((1:30)+rnorm(30),k=2,type="trend")
test=ur.df((1:30)+rnorm(30),lags=2,type="trend")
test
attr(test,"cval")
test=ur.df((1:30)+rnorm(30),lags=2,type="drift")
test
attr(test,"cval")
test=ur.df((1:30)+rnorm(30),lags=2,type="trend")
test
aa=(1:30)+rnorm(30)
adf.test(aa)
test=ur.df(aa,lags=2,type="trend")
test
test=ur.df(aa,lags=3,type="trend")
test
require(tseries)
kpss.test(anchovy, null="Trend")
kpss.test(sardine)
require(tseries)
kpss.test(anchovy, null="Trend")
kpss.test(sardine, null="Trend")
?kpss.test
diff(anchovy)
diff(anchovy)
p1 = ggplot(anchovy, aes(x=Year,y=log.metric.tons)) +
geom_line() + xlab("") + ylab("value") +
ggtitle("anchovy")
p1 = ggplot(anchovy, aes(x=Year,y=log.metric.tons)) +
geom_line() + xlab("") + ylab("value") +
ggtitle("anchovy")
anchovy
ggplot(landings, aes(x=Year,y=log.metric.tons, group="Anchovy")) +
geom_line() + xlab("") + ylab("value") +
ggtitle("anchovy")
landings
?ggplot
ggplot(landings, aes(x=Year, y=log.metric.tons))
landings
ggplot(landings, aes(x=Year, y=log.metric.tons)) +
geom_line()
ggplot(subset(landings, Species=="Anchovy"), aes(x=Year,y=log.metric.tons)) +
geom_line() + xlab("") + ylab("value") +
ggtitle("anchovy")
par(mfrow=c(1,2))
plot(anchovy)
plot(diff(anchovy))
par(mfrow=c(1,2))
plot(anchovy)
plot(diff(anchovy))
par(mfrow=c(1,2))
plot(anchovy, type="l")
plot(diff(anchovy), type="l")
adf.test(diff(anchovy))
adf.test(diff(anchovy),k=0)
adf.test(diff(anchovy),k=2)
ndiffs(anchovy)
library(forecast)
ndiffs(anchovy)
?ndiffs
ndiffs(anchovy, test="adf")
anchovy
adf.test(diff(anchovy))
?adf.test
adf.test(diff(anchovy),k=1)
ndiffs
?ur.df
?ur.kpss
ur.kpss(rnorm(100))
ur.kpss(rnorm(100)+1:100)
test=ur.kpss(rnorm(100)+1:100)
summary(test)
test=ur.kpss(rnorm(100))
summary(test)
test=ur.kpss(rnorm(100)+1:100, type="tau")
summary(test)
test=ur.kpss(rnorm(100)+1:100, type="tau")
summary(test)
test=ur.kpss(rnorm(100)+1:100)
summary(test)
test=ur.kpss(rnorm(100)+100)
summary(test)
?kpss.test
diff.anchovy = diff(anchovy)
diff.sardine = diff(sardine)
kpss.test(diff.anchovy)
?adf.test
diff.anchovy = diff(anchovy)
diff.sardine = diff(sardine)
kpss.test(diff.anchovy)
adf.test(diff.anchovy, k=1)
diff.anchovy = diff(anchovy)
diff.sardine = diff(sardine)
kpss.test(diff.anchovy)
adf.test(diff.anchovy, k=2)
diff.anchovy = diff(anchovy)
diff.sardine = diff(sardine)
kpss.test(diff.anchovy)
kpass.test(diff.sardine)
diff.anchovy = diff(anchovy)
diff.sardine = diff(sardine)
kpss.test(diff.anchovy)
kpss.test(diff.sardine)
?adf.test
adf.test(diff.anchovy)
adf.test(diff.sardine)
ur.df(diff.anchovy)
ur.df(diff.sardine)
summary(ur.df(diff.anchovy))
?purl
?opts_knit
?knit
dir()
knit("Forecasting 1 - Introduction.Rmd", tangle=TRUE)
library(knitr)
knit("Forecasting 1 - Introduction.Rmd", tangle=TRUE)
?rm
?file.copy
?install.packages
dir("figs"
)
?adf.test
library(tsereis)
library(tseries)
?adf.test
library(urca)
?ur.df
plot(diff.anchovy)
k = trunc((length(anchovy)-1)^(1/3))
k
options(htmltools.dir.version = FALSE, servr.daemon = TRUE)
library(huxtable)
ur.df(diff.anchovy, type="none", lags=2)
test=ur.df(diff.anchovy, type="none", lags=2)
summary(test)
knit("Forecasting 3 - ARMA.Rmd")
library(knitr)
knit("Forecasting 3 - ARMA.Rmd")
icon::fa("home")
library(icon)
?fa
?fa
?icon
devtools::install_github("rstudio/fontawesome")
?arima
library(forecast)
?arma
?Arima
options(htmltools.dir.version = FALSE, servr.daemon = TRUE)
library(huxtable)
load("landings.RData")
landings$log.metric.tons = log(landings$metric.tons)
landings = subset(landings, Year <= 1989)
anchovy = subset(landings, Species=="Anchovy")$log.metric.tons
sardine = subset(landings, Species=="Sardine")$log.metric.tons
library(ggplot2)
library(gridExtra)
library(reshape2)
library(tseries)
library(forecast)
anchovy.diff1 = diff(anchovy)
acf(anchovy.diff1)
acf(anchovy)
plot(anchovy)
diffs(anchovy)
diffts(anchovy)
diffs2(anchovy)
diffns(anchovy)
auto.arima(anchovy)
auto.arima(anchovy.diff1)
mean(anchovy.diff1)
pacf(anchovy.diff1)
?arima.sim
a=arima.sim(n=100, list(ma=c(-.7)))
pacf(a)
acf(a)
pacf(a)
a=arima.sim(n=1000, list(ma=c(-.7)))
pacf(a)
acf(a)
a=arima.sim(n=1000, list(ma=c(.7)))
acf(a)
pacf(a)
a=arima.sim(n=1000, list(ar=c(.7)))
pacf(a)
acf(a)
par(mfrow=c(3,2))
#####
ys = arima.sim(n=100, list(ar=.7))
acf(ys)
ys = arima.sim(n=100, list(ar=.7))
acf(ys)
title("AR-1 (p=1, q=0)")
pacf(ys)
ys = arima.sim(n=100, list(ma=.7))
acf(ys)
title("MA-1 (p=0, q=1)")
pacf(ys)
ys = arima.sim(n=100, list(ar=.7, ma=.7))
acf(ys)
title("ARMA (p=1, q=1)")
pacf(ys)
ys = arima.sim(n=100, list(ar=.7))
acf(ys)
title("AR-1 (p=1, q=0)")
pacf(ys)
ys = arima.sim(n=100, list(ma=.7))
acf(ys)
title("MA-1 (p=0, q=1)")
pacf(ys)
ys = arima.sim(n=100, list(ar=.7, ma=.7))
acf(ys)
title("ARMA (p=1, q=1)")
pacf(ys)
par(mfrow=c(3,2))
#####
ys = arima.sim(n=100, list(ar=.7))
acf(ys)
title("AR-1 (p=1, q=0)")
pacf(ys)
ys = arima.sim(n=100, list(ma=.7))
acf(ys)
title("MA-1 (p=0, q=1)")
pacf(ys)
ys = arima.sim(n=100, list(ar=.7, ma=.7))
acf(ys)
title("ARMA (p=1, q=1)")
pacf(ys)
par(mfrow=c(3,2))
#####
ys = arima.sim(n=1000, list(ar=.7))
acf(ys)
title("AR-1 (p=1, q=0)")
pacf(ys)
ys = arima.sim(n=1000, list(ma=.7))
acf(ys)
title("MA-1 (p=0, q=1)")
pacf(ys)
ys = arima.sim(n=1000, list(ar=.7, ma=.7))
acf(ys)
title("ARMA (p=1, q=1)")
pacf(ys)
?acf
par(mfrow=c(3,2))
#####
ys = arima.sim(n=1000, list(ar=.7))
acf(ys, title="")
title("AR-1 (p=1, q=0)")
pacf(ys, title="")
ys = arima.sim(n=1000, list(ma=.7))
acf(ys)
title("MA-1 (p=0, q=1)")
pacf(ys)
ys = arima.sim(n=1000, list(ar=.7, ma=.7))
acf(ys)
title("ARMA (p=1, q=1)")
pacf(ys)
?plot.acf
par(mfrow=c(3,2))
#####
ys = arima.sim(n=1000, list(ar=.7))
acf(ys, main="")
title("AR-1 (p=1, q=0)")
pacf(ys, main="")
ys = arima.sim(n=1000, list(ma=.7))
acf(ys)
title("MA-1 (p=0, q=1)")
pacf(ys)
ys = arima.sim(n=1000, list(ar=.7, ma=.7))
acf(ys)
title("ARMA (p=1, q=1)")
pacf(ys)
par(mfrow=c(2,2))
#####
ys = arima.sim(n=1000, list(ar=.7))
acf(ys, main="")
title("AR-1 (p=1, q=0)")
pacf(ys, main="")
ys = arima.sim(n=1000, list(ar=c(.7,.2)))
acf(ys, main="")
title("MA-1 (p=0, q=1)")
pacf(ys, main="")
par(mfrow=c(2,2))
#####
ys = arima.sim(n=1000, list(ar=.7, ma=.7))
acf(ys, main="")
title("AR-1 (p=0, q=2)")
pacf(ys, main="")
ys = arima.sim(n=1000, list(ar=c(.7,.2), ma=c(.7,.2)))
acf(ys, main="")
title("MA-2 (p=0, q=2)")
pacf(ys, main="")
auto.arima(anchovy)
auto.arima(anchovy.diff1)
a1 = arima.sim(n=100, model=list(ar=c(.7,.2)))
auto.arima(a1)
a1 = arima.sim(n=100, model=list(ar=c(.7,.2)))
auto.arima(a1)
a1 = arima.sim(n=100, model=list(ar=c(.7,.2)))
auto.arima(a1)
a1 = arima.sim(n=100, model=list(ar=c(.7,.2)))
auto.arima(a1)
a1 = arima.sim(n=100, model=list(ar=c(.7,.2)))
auto.arima(a1)
a1 = arima.sim(n=100, model=list(ar=c(.7,.2)))
auto.arima(a1)
a1 = arima.sim(n=1000, model=list(ar=c(.7,.2)))
auto.arima(a1)
a1 = arima.sim(n=1000, model=list(ar=c(.7,.2)))
auto.arima(a1)
a1 = arima.sim(n=1000, model=list(ar=c(.7,.2)))
auto.arima(a1)
a1 = arima.sim(n=1000, model=list(ar=c(.7,.2)))
auto.arima(a1)
a1 = arima.sim(n=1000, model=list(ar=c(.7,.2)))
auto.arima(a1)
a1 = arima.sim(n=1000, model=list(ar=c(.7,.2)))
auto.arima(a1)
a1 = arima.sim(n=1000, model=list(ar=c(.7,.2)))
auto.arima(a1)
a1 = arima.sim(n=1000, model=list(ar=c(.7,.2)))
auto.arima(a1)
a1 = arima.sim(n=1000, model=list(ar=c(.7,.2)))
auto.arima(a1)
a1 = arima.sim(n=1000, model=list(ar=c(.7,.2)))
auto.arima(a1)
?arima.sim
?auto.arima
a1 = arima.sim(n=1000, model=list(ar=c(.7,.2)))
auto.arima(a1, D=0)
a1 = arima.sim(n=1000, model=list(ar=c(.7,.2)))
auto.arima(a1, D=0)
a1 = arima.sim(n=1000, model=list(ar=c(.7,.2)))
auto.arima(a1, D=0)
a1 = arima.sim(n=1000, model=list(ar=c(.7,.2)))
auto.arima(a1, D=0)
a1 = arima.sim(n=1000, model=list(ar=c(.7,.2)))
auto.arima(a1, D=0)
plot(a1)
a1 = arima.sim(n=1000, model=list(ar=c(.7,-.2)))
auto.arima(a1, D=0)
a1 = arima.sim(n=1000, model=list(ar=c(.7,-.2)))
auto.arima(a1, D=0)
a1 = arima.sim(n=1000, model=list(ar=c(.7,.2)))
auto.arima(a1, seasonal=FALSE)
a1 = arima.sim(n=1000, model=list(ar=c(.7,.2)))
auto.arima(a1, seasonal=FALSE)
a1 = arima.sim(n=1000, model=list(ar=c(.7,.2)))
auto.arima(a1, seasonal=FALSE)
a1 = arima.sim(n=1000, model=list(ar=c(.7,.2)))
auto.arima(a1, seasonal=FALSE)
a1 = arima.sim(n=1000, model=list(ar=c(.9,.2)))
a1 = arima.sim(n=1000, model=list(ar=c(.9,.1)))
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0, max.p=3)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0, max.p=3)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0, max.p=3)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0, max.p=3)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0, max.p=3)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0, max.p=3)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0, max.p=3)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0, max.p=3)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0, max.p=3)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0, max.p=3)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0, max.p=3)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0, max.p=3)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0, max.d=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0, max.d=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0, max.d=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0, max.d=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0, max.d=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0, max.d=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.q=0, max.d=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.d=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.d=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.d=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.d=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.d=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.d=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.d=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.d=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.d=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.d=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.d=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.d=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.d=0)
a1 = arima.sim(n=1000, model=list(ar=c(.8,.1)))
auto.arima(a1, seasonal=FALSE, max.d=0)
